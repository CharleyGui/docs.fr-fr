### YamlMime:Tutorial
title: <span data-ttu-id="39550-101">Utiliser l’interpolation de chaîne pour construire des chaînes mises en forme</span><span class="sxs-lookup"><span data-stu-id="39550-101">Use string interpolation to construct formatted strings</span></span>
metadata:
  title: Tutoriel interactif Interpolation de chaîne - C#
  description: Dans ce tutoriel, vous allez explorer la fonctionnalité d’interpolation de chaîne en C# de manière interactive à l’aide de votre navigateur. Vous allez écrire un code C# et afficher les résultats de la compilation et de l’exécution du code directement dans le navigateur.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: eb4b1571b4d00d90034148f7b595f4499859ce4b
  ms.sourcegitcommit: 205b9a204742e9c77256d43ac9d94c3f82909808
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 09/10/2019
  ms.locfileid: "70850948"
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="39550-105">Ce tutoriel explique comment utiliser [l’interpolation de chaîne](../../language-reference/tokens/interpolated.md) pour insérer des valeurs dans une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="39550-105">This tutorial teaches you how to use [string interpolation](../../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="39550-106">Vous allez également apprendre à contrôler la mise en forme du texte de la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="39550-106">You also learn how to control text formatting of the result string.</span></span> <span data-ttu-id="39550-107">En utilisant votre navigateur pour écrire et exécuter du code C#, vous voyez instantanément les résultats.</span><span class="sxs-lookup"><span data-stu-id="39550-107">You use your browser to write and run C# code and can immediately see the results.</span></span>
- title: <span data-ttu-id="39550-108">Créer une chaîne interpolée</span><span class="sxs-lookup"><span data-stu-id="39550-108">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="39550-109">Exécutez le code suivant dans la fenêtre interactive.</span><span class="sxs-lookup"><span data-stu-id="39550-109">Run the following code in the interactive window.</span></span> <span data-ttu-id="39550-110">Pour cela, tapez le code dans la fenêtre interactive (remplacez `<name>` par votre nom) et sélectionnez **Exécuter** :</span><span class="sxs-lookup"><span data-stu-id="39550-110">To do that, type the code in the interactive window (replace `<name>` with your name) and select **Run**:</span></span>


    ```csharp

    var name = "<name>";

    Console.WriteLine($"Hello, {name}. It's a pleasure to meet you!");

    ```


    <span data-ttu-id="39550-111">Quand vous exécutez le code, la fenêtre **Sortie** affiche une chaîne qui inclut votre nom dans le message d’accueil.</span><span class="sxs-lookup"><span data-stu-id="39550-111">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id="39550-112">L’argument de chaîne dans l’appel de la méthode <xref:System.Console.WriteLine%2A> est une *expression de chaîne interpolée*.</span><span class="sxs-lookup"><span data-stu-id="39550-112">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string expression*.</span></span> <span data-ttu-id="39550-113">C’est un genre de modèle qui vous permet de construire une chaîne unique (appelée *chaîne de résultat*) à partir d’une chaîne qui comprend du code incorporé.</span><span class="sxs-lookup"><span data-stu-id="39550-113">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id="39550-114">Les expressions de chaînes interpolées sont particulièrement utiles pour insérer des valeurs dans une chaîne ou pour concaténer (joindre) plusieurs chaînes.</span><span class="sxs-lookup"><span data-stu-id="39550-114">Interpolated string expressions are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span>


    <span data-ttu-id="39550-115">L’exemple ci-dessus contient les deux éléments que chaque expression de chaîne interpolée doit avoir :</span><span class="sxs-lookup"><span data-stu-id="39550-115">The example above contains the two elements that every interpolated string expression must have:</span></span>


    - <span data-ttu-id="39550-116">Un littéral de chaîne qui commence par le caractère `$` avant ses guillemets ouvrants.</span><span class="sxs-lookup"><span data-stu-id="39550-116">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id="39550-117">Il ne peut pas y avoir d’espace entre le symbole `$` et les guillemets.</span><span class="sxs-lookup"><span data-stu-id="39550-117">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id="39550-118">(Si vous voulez voir ce qui se passe si vous en incluez un, insérez un espace après le caractère `$` dans la fenêtre interactive et exécutez le code modifié.</span><span class="sxs-lookup"><span data-stu-id="39550-118">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id="39550-119">Le compilateur C# affiche un message d’erreur : « Caractère inattendu '$' ».)</span><span class="sxs-lookup"><span data-stu-id="39550-119">The C# compiler complains, "Unexpected character '$'".)</span></span>


    - <span data-ttu-id="39550-120">Une ou plusieurs *expressions d’interpolation*.</span><span class="sxs-lookup"><span data-stu-id="39550-120">One or more *interpolation expressions*.</span></span> <span data-ttu-id="39550-121">Une expression d’interpolation est indiquée par des accolades ouvrantes et fermantes (`{` et `}`).</span><span class="sxs-lookup"><span data-stu-id="39550-121">An interpolation expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id="39550-122">Vous pouvez placer n’importe quelle expression C# qui retourne une valeur (notamment `null`) à l’intérieur des accolades.</span><span class="sxs-lookup"><span data-stu-id="39550-122">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span>


    <span data-ttu-id="39550-123">Essayons quelques autres exemples d’interpolation de chaîne avec d’autres types de données.</span><span class="sxs-lookup"><span data-stu-id="39550-123">Let's try a few more string interpolation examples with some other data types.</span></span>


    > [!NOTE]

    > <span data-ttu-id="39550-124">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="39550-124">This online coding experience is in preview mode.</span></span> <span data-ttu-id="39550-125">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="39550-125">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="39550-126">Inclure différents types de données</span><span class="sxs-lookup"><span data-stu-id="39550-126">Include different data types</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"39550-127\">À l’étape précédente, vous avez utilisé l’interpolation de chaîne pour insérer une chaîne à l’intérieur d’une autre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-127\">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id=\"39550-128\">Chaque expression d’interpolation qui fait partie d’une expression de chaîne interpolée peut être cependant de n’importe quel type de données.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-128\">Each interpolation expression that is part of an interpolated string expression can be of any data type, though.</span></span> <span data-ttu-id=\"39550-129\">Nous allons insérer des valeurs de différentes expressions de types de données dans une chaîne interpolée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-129\">Let's include values of various data type expressions in an interpolated string.</span></span>\n\n<span data-ttu-id=\"39550-130\">Dans l’exemple suivant, nous définissons d’abord un [tuple](../../tuples.md) qui a `Name`, `Price` et `perPackage` membres.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-130\">In the following example, we first define a [tuple](../../tuples.md) that has `Name`, `Price`, and `perPackage` members.</span></span> <span data-ttu-id=\"39550-131\">Exécutez le code suivant dans la fenêtre interactive :</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-131\">Run the following code in the interactive window:</span></span>\n\n```csharp\nvar item = (Name: \"eggplant\", Price: 1.99m, perPackage: 3);\nvar date = DateTime.Now;\nConsole.WriteLine($\"On {date}, the price of {item.Name} was {item.Price:C2} per {item.perPackage} items.\");\n```\n\n<span data-ttu-id=\"39550-132\">Notez que l’expression d’interpolation `item.Price` dans la chaîne interpolée correspond au texte « 1,99 » dans la chaîne de résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-132\">Note that the interpolation expression `item.Price` in the interpolated string resolves to the text \"1.99\" in the result string.</span></span> <span data-ttu-id=\"39550-133\">En effet, lorsque le résultat de l’expression n’est pas de type chaîne, il est résolu en une chaîne de la façon suivante :</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-133\">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>\n\n- <span data-ttu-id=\"39550-134\">Si l’expression d’interpolation donne une valeur `null`, une chaîne vide («» ou <xref:System.String.Empty?displayProperty=nameWithType>) est utilisée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-134\">If the interpolation expression evaluates to `null`, an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>\n\n- <span data-ttu-id=\"39550-135\">Si l’expression d’interpolation ne donne pas une valeur `null`, en général, la méthode `ToString` de l’expression du résultat est appelée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-135\">If the interpolation expression doesn't evaluate to `null`, typically the `ToString` method of the result expression is called.</span></span> \n\n<span data-ttu-id=\"39550-136\">Dans la sortie de cet exemple, la date est trop précise (le prix des aubergines ne change pas chaque seconde) et la valeur du prix n’indique pas la devise locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-136\">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"39550-137\">À l’étape suivante, vous découvrirez comment résoudre ces problèmes en contrôlant le format des représentations sous forme de chaînes des résultats des expressions.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-137\">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"39550-138\">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-138\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"39550-139\">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"39550-139\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="39550-140">Contrôler la mise en forme des expressions d’interpolation</span><span class="sxs-lookup"><span data-stu-id="39550-140">Control the formatting of interpolation expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="39550-141">À l’étape précédente, deux chaînes à la mise en forme incorrecte ont été insérées dans la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="39550-141">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="39550-142">L’une était une valeur de date et d’heure pour laquelle seule la date était appropriée.</span><span class="sxs-lookup"><span data-stu-id="39550-142">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="39550-143">La deuxième était un prix qui n’indiquait pas la devise locale.</span><span class="sxs-lookup"><span data-stu-id="39550-143">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="39550-144">Ces deux problèmes sont faciles à résoudre.</span><span class="sxs-lookup"><span data-stu-id="39550-144">Both issues are easy to address.</span></span> <span data-ttu-id="39550-145">En utilisant l’interpolation de chaîne, vous pouvez spécifier des *chaînes de format* qui contrôlent la mise en forme de types particuliers.</span><span class="sxs-lookup"><span data-stu-id="39550-145">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="39550-146">Modifiez l’appel à `Console.WriteLine` de l’exemple précédent de façon à inclure les chaînes de format pour les expressions de date et de prix, comme indiqué dans la ligne de code suivante :</span><span class="sxs-lookup"><span data-stu-id="39550-146">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item.Name} was {item.Price} per {item.perPackage} items");

    ```


    <span data-ttu-id="39550-147">Vous spécifiez une chaîne de format en plaçant après l’expression d’interpolation un signe deux-points (« : ») et la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="39550-147">You specify a format string by following the interpolation expression with a colon (":") and the format string.</span></span> <span data-ttu-id="39550-148">« d » est une [chaîne de format de date et d’heure standard](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) qui représente le format de date courte.</span><span class="sxs-lookup"><span data-stu-id="39550-148">"d" is a [standard date and time format string](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="39550-149">« C2 » est une [chaîne de format numérique standard](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) qui représente un nombre sous forme de valeur monétaire avec deux chiffres après la virgule.</span><span class="sxs-lookup"><span data-stu-id="39550-149">"C2" is a [standard numeric format string](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="39550-150">Plusieurs types dans les bibliothèques .NET prennent en charge un ensemble prédéfini de chaînes de format.</span><span class="sxs-lookup"><span data-stu-id="39550-150">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="39550-151">Il s’agit notamment de tous les types numériques et des types de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="39550-151">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="39550-152">Pour obtenir une liste complète des types qui prennent en charge les chaînes de format, consultez [Chaînes de format et types de bibliothèque de classes .NET](../../../standard/base-types/formatting-types.md#stringRef) dans l’article [Mise en forme des types dans .NET](../../../standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="39550-152">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="39550-153">Essayez de modifier les chaînes de format dans l’exemple pour voir comment elles impactent la mise en forme de la date et de l’heure ainsi que la valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="39550-153">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="39550-154">Remplacez le « d » dans `{date:d}` par « t » (pour afficher le format d’heure courte), « y » (pour afficher l’année et mois) et « yyyy » (pour afficher l’année sous forme de nombre à quatre chiffres).</span><span class="sxs-lookup"><span data-stu-id="39550-154">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="39550-155">Remplacez le « C2 » dans `{price:C2}` par « e » (pour la notation exponentielle) et « F3 » (pour une valeur numérique avec trois chiffres après la virgule).</span><span class="sxs-lookup"><span data-stu-id="39550-155">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="39550-156">En plus de contrôler la mise en forme, vous pouvez contrôler la largeur de champ et l’alignement des chaînes mises en forme qui sont incluses dans la chaîne de résultat.</span><span class="sxs-lookup"><span data-stu-id="39550-156">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="39550-157">À l’étape suivante, vous allez découvrir comment effectuer cette opération.</span><span class="sxs-lookup"><span data-stu-id="39550-157">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="39550-158">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="39550-158">This online coding experience is in preview mode.</span></span> <span data-ttu-id="39550-159">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="39550-159">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="39550-160">Contrôler la largeur de champ et l’alignement des expressions d’interpolation</span><span class="sxs-lookup"><span data-stu-id="39550-160">Control the field width and alignment of interpolation expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="39550-161">En règle générale, quand le résultat d’une expression de chaîne interpolée est représenté sous forme de chaîne, la chaîne est incluse dans une chaîne de résultat sans espaces de début ou de fin.</span><span class="sxs-lookup"><span data-stu-id="39550-161">Ordinarily, when the result of an interpolated string expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="39550-162">Contrôler la largeur d’un champ et l’alignement du texte vous permet de rendre une sortie plus lisible, en particulier quand vous utilisez un jeu de données.</span><span class="sxs-lookup"><span data-stu-id="39550-162">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="39550-163">Pour observer cela, exécutez le code suivant :</span><span class="sxs-lookup"><span data-stu-id="39550-163">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="39550-164">Les noms des éléments sont alignés à gauche, tandis que leurs quantités sont alignées à droite.</span><span class="sxs-lookup"><span data-stu-id="39550-164">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="39550-165">Vous spécifiez l’alignement en ajoutant une virgule (« , ») après une expression d’interpolation et en spécifiant la largeur de champ *minimum*.</span><span class="sxs-lookup"><span data-stu-id="39550-165">You specify the alignment by adding a comma (",") after an interpolation expression and designating the *minimum* field width.</span></span> <span data-ttu-id="39550-166">Si la valeur spécifiée est un nombre positif, le champ est aligné à droite.</span><span class="sxs-lookup"><span data-stu-id="39550-166">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="39550-167">Si c’est un nombre négatif, le champ est aligné à gauche.</span><span class="sxs-lookup"><span data-stu-id="39550-167">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="39550-168">Essayez de supprimer les signes négatifs du code `{"Item",-25}` et `{item.Key,-25}`, puis réexécutez l’exemple.</span><span class="sxs-lookup"><span data-stu-id="39550-168">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="39550-169">Cette fois, les noms d’élément sont alignés à droite.</span><span class="sxs-lookup"><span data-stu-id="39550-169">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="39550-170">Vous pouvez combiner un spécificateur d’alignement et une chaîne de format pour une même expression d’interpolation.</span><span class="sxs-lookup"><span data-stu-id="39550-170">You can combine an alignment specifier and a format string for a single interpolation expression.</span></span> <span data-ttu-id="39550-171">Pour cela, spécifiez d’abord l’alignement, puis un signe deux-points et la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="39550-171">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="39550-172">Essayez d’exécuter le code suivant qui affiche trois chaînes mises en forme avec des largeurs de champs définies :</span><span class="sxs-lookup"><span data-stu-id="39550-172">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="39550-173">Cette expérience de codage en ligne est en mode d’aperçu.</span><span class="sxs-lookup"><span data-stu-id="39550-173">This online coding experience is in preview mode.</span></span> <span data-ttu-id="39550-174">Si vous rencontrez des problèmes, veuillez les signaler [sur le référentiel dotnet/try](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="39550-174">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >
    <span data-ttu-id="39550-175">Vous avez terminé le tutoriel interactif sur l’interpolation de chaînes.</span><span class="sxs-lookup"><span data-stu-id="39550-175">You've completed the string interpolation interactive tutorial.</span></span> <span data-ttu-id="39550-176">Vous pouvez cliquer sur le lien **Collections en C#** ci-dessous pour commencer le tutoriel interactif suivant, ou consulter le [site .NET](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) pour télécharger le kit SDK .NET Core, créer un projet sur votre ordinateur et continuer à coder.</span><span class="sxs-lookup"><span data-stu-id="39550-176">You can click the **Collections in C#** link below to start the next interactive tutorial, or you can visit the [.NET site](https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="39550-177">La section « étapes suivantes » vous ramène à ces didacticiels.</span><span class="sxs-lookup"><span data-stu-id="39550-177">The "Next steps" section brings you back to these tutorials.</span></span>


    <span data-ttu-id="39550-178">Pour plus d’informations, voir [Interpolation de chaînes](../../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="39550-178">For more information, see [String interpolation](../../language-reference/tokens/interpolated.md).</span></span>
